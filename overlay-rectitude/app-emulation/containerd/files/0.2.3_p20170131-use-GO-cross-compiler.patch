From 8317f4e0246b7683d6e3163c7ab247d60f2056e9 Mon Sep 17 00:00:00 2001
From: Ke Wu <mikewu@google.com>
Date: Fri, 31 Mar 2017 15:44:37 -0700
Subject: [PATCH] use GO cross compiler

---
 Makefile                                   | 18 +++++++++---------
 ctr/Makefile                               |  2 +-
 vendor/src/google.golang.org/grpc/Makefile | 18 +++++++++---------
 3 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/Makefile b/Makefile
index 4aec3f0..91dd501 100644
--- a/Makefile
+++ b/Makefile
@@ -40,22 +40,22 @@ clean:
 	rm -rf bin && rm -rf output
 
 client: bin
-	cd ctr && go build -ldflags "${LDFLAGS}" -o ../bin/ctr
+	cd ctr && ${GO} build -ldflags "${LDFLAGS}" -o ../bin/ctr
 
 client-static:
-	cd ctr && go build -ldflags "-w -extldflags -static ${LDFLAGS}" -tags "$(BUILDTAGS)" -o ../bin/ctr
+	cd ctr && ${GO} build -ldflags "-w -extldflags -static ${LDFLAGS}" -tags "$(BUILDTAGS)" -o ../bin/ctr
 
 daemon: bin
-	cd containerd && go build -ldflags "${LDFLAGS}"  -tags "$(BUILDTAGS)" -o ../bin/containerd
+	cd containerd && ${GO} build -ldflags "${LDFLAGS}"  -tags "$(BUILDTAGS)" -o ../bin/containerd
 
 daemon-static:
-	cd containerd && go build -ldflags "-w -extldflags -static ${LDFLAGS}" -tags "$(BUILDTAGS)" -o ../bin/containerd
+	cd containerd && ${GO} build -ldflags "-w -extldflags -static ${LDFLAGS}" -tags "$(BUILDTAGS)" -o ../bin/containerd
 
 shim: bin
-	cd containerd-shim && go build -tags "$(BUILDTAGS)" -ldflags "-w ${LDFLAGS}" -o ../bin/containerd-shim
+	cd containerd-shim && ${GO} build -tags "$(BUILDTAGS)" -ldflags "-w ${LDFLAGS}" -o ../bin/containerd-shim
 
 shim-static:
-	cd containerd-shim && go build -ldflags "-w -extldflags -static ${LDFLAGS}" -tags "$(BUILDTAGS)" -o ../bin/containerd-shim
+	cd containerd-shim && ${GO} build -ldflags "-w -extldflags -static ${LDFLAGS}" -tags "$(BUILDTAGS)" -o ../bin/containerd-shim
 
 $(TESTBENCH_BUNDLE_DIR)/busybox.tar:
 	mkdir -p $(TESTBENCH_BUNDLE_DIR)
@@ -88,14 +88,14 @@ shell: dbuild
 	$(DOCKER_RUN) bash
 
 test: validate install bundles-rootfs
-	go test -bench=. -v $(shell go list ./... | grep -v /vendor | grep -v /integration-test ) -runtime=$(RUNTIME)
+	${GO} test -bench=. -v $(shell ${GO} list ./... | grep -v /vendor | grep -v /integration-test ) -runtime=$(RUNTIME)
 ifneq ($(wildcard /.dockerenv), )
 	cd integration-test ; \
-go test -check.v -check.timeout=$(TEST_TIMEOUT) $(TESTFLAGS) timeout=$(TEST_SUITE_TIMEOUT) github.com/docker/containerd/integration-test
+${GO} test -check.v -check.timeout=$(TEST_TIMEOUT) $(TESTFLAGS) timeout=$(TEST_SUITE_TIMEOUT) github.com/docker/containerd/integration-test
 endif
 
 bench: shim validate install bundles-rootfs
-	go test -bench=. -v $(shell go list ./... | grep -v /vendor | grep -v /integration-test) -runtime=$(RUNTIME)
+	${GO} test -bench=. -v $(shell ${GO} list ./... | grep -v /vendor | grep -v /integration-test) -runtime=$(RUNTIME)
 
 validate: fmt lint
 
diff --git a/ctr/Makefile b/ctr/Makefile
index 5f03483..d985d40 100644
--- a/ctr/Makefile
+++ b/ctr/Makefile
@@ -1,2 +1,2 @@
 all:
-	go build
+	${GO} build
diff --git a/vendor/src/google.golang.org/grpc/Makefile b/vendor/src/google.golang.org/grpc/Makefile
index 03bb01f..ce7e12c 100644
--- a/vendor/src/google.golang.org/grpc/Makefile
+++ b/vendor/src/google.golang.org/grpc/Makefile
@@ -1,39 +1,39 @@
 all: test testrace
 
 deps:
-	go get -d -v google.golang.org/grpc/...
+	${GO} get -d -v google.golang.org/grpc/...
 
 updatedeps:
-	go get -d -v -u -f google.golang.org/grpc/...
+	${GO} get -d -v -u -f google.golang.org/grpc/...
 
 testdeps:
-	go get -d -v -t google.golang.org/grpc/...
+	${GO} get -d -v -t google.golang.org/grpc/...
 
 updatetestdeps:
-	go get -d -v -t -u -f google.golang.org/grpc/...
+	${GO} get -d -v -t -u -f google.golang.org/grpc/...
 
 build: deps
-	go build google.golang.org/grpc/...
+	${GO} build google.golang.org/grpc/...
 
 proto:
 	@ if ! which protoc > /dev/null; then \
 		echo "error: protoc not installed" >&2; \
 		exit 1; \
 	fi
-	go get -u -v github.com/golang/protobuf/protoc-gen-go
+	${GO} get -u -v github.com/golang/protobuf/protoc-gen-go
 	# use $$dir as the root for all proto files in the same directory
 	for dir in $$(git ls-files '*.proto' | xargs -n1 dirname | uniq); do \
 		protoc -I $$dir --go_out=plugins=grpc:$$dir $$dir/*.proto; \
 	done
 
 test: testdeps
-	go test -v -cpu 1,4 google.golang.org/grpc/...
+	${GO} test -v -cpu 1,4 google.golang.org/grpc/...
 
 testrace: testdeps
-	go test -v -race -cpu 1,4 google.golang.org/grpc/...
+	${GO} test -v -race -cpu 1,4 google.golang.org/grpc/...
 
 clean:
-	go clean -i google.golang.org/grpc/...
+	${GO} clean -i google.golang.org/grpc/...
 
 coverage: testdeps
 	./coverage.sh --coveralls
-- 
2.12.2.564.g063fe858b8-goog

